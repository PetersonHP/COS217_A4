Assignment 4 readme File

------------------------------------------------------------------------
Student 1: What is your name?
Hugh Peterson


------------------------------------------------------------------------
Student 2: What is your name?
N/A


------------------------------------------------------------------------
Student 1: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.



------------------------------------------------------------------------
Student 2: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.



------------------------------------------------------------------------
Student 1: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.



------------------------------------------------------------------------
Student 2: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.



------------------------------------------------------------------------
Student 1: What is your assessment of the assignment? Was it helpful?
Was it fun?



------------------------------------------------------------------------
Student 2: What is your assessment of the assignment? Was it helpful?
Was it fun?



------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?



------------------------------------------------------------------------
What warnings does splint generate for Part 2's checker, and what are
your disagreements with them? Copy the splint warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."



------------------------------------------------------------------------
What warnings does critTer generate on checkerDT.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."



------------------------------------------------------------------------
What warnings does splint generate on your Part 3 code, and what are
your disagreements with them? Copy the splint warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."



------------------------------------------------------------------------
What warnings does critTer generate on your Part 3 code, and what are
your disagreements with them? Copy the critTer warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."



------------------------------------------------------------------------
For each of the five faulty BDT implementations required by Step
1.5, identify the function where there is a bug. You do not have to
identify the bug itself, only its location, but note that this must be
the location of the underlying error, which is not necessarily where
the error manifests itself or is "noticed" by the client.


      Executable         Function with the underlying error
===============================================================
         ./bdtBad1        BDT_insert()
---------------------------------------------------------------
         ./bdtBad2        BDT_freeSubtree()
---------------------------------------------------------------
         ./bdtBad3        BDT_addChild()
---------------------------------------------------------------
         ./bdtBad4        BDT_strlenAccumulate()
---------------------------------------------------------------
         ./bdtBad5        BDT_findNode()
===============================================================

------------------------------------------------------------------------
What are your critiques of the given DT implementations, as
specified in Step 2.5?

************************************************************************
dt.h
************************************************************************
- No critiques here.

************************************************************************
nodeDT.h
************************************************************************
- It might be better for getParent() to behave more similarly to 
  getChild(), given its similar name and comparable behavior. One idea 
  is that getParent() could also store its result at the address of a 
  pointer parameter called *poNResult and could return either SUCCESS
  or NO_SUCH_PATH as an exit status int.

************************************************************************
dtGood.c
************************************************************************
- stdio.h is never used, so it should not be imported

- DT_insert(), DT_contains(), DT_rm(), DT_init(), DT_destroy() should 
  have function comments, even though there are already comments in the
  .h file since comments would make it easier for someone who is 
  actually debugging or working with the implementation.

- It might be better to rename DT_destroy() to DT_free() so that it is 
  more clear that the method actually frees the whole tree. This would 
  also be more consistent with naming conventions across the other 
  modules, where the method that does this is always in the format 
  <MODULE NAME>_free().

************************************************************************
nodeDTGood.c
************************************************************************
- Node_free(), Node_getPath(), Node_hasChild(), Node_getNumChildren(), 
  Node_getChild(), Node_getParent(), Node_compare(), and
  Node_toString() should probably have function comments for the same
  reason as mentioned in the critique of dtGood.c. In Node_toString(),
  this is especially important, as the memory allocated belongs to the
  client, who is then responsible for freeing it, so this should be
  very clear.

- Readability and comprehension could be improved if Node_new() was 
  split up into two functions, using one to handle all of the
  validation that occurs at the beginning of node creation and the
  other to handle the actual creation and linking. This would be
  easier to understand, as the two tasks are relatively different,
  conceptually speaking.

------------------------------------------------------------------------